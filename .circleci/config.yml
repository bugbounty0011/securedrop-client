---
common-steps:
  - &install_testing_dependencies
    run:
      name: Install testing dependencies
      command: |
        set -e
        apt update && apt install -y git gnupg libqt5x11extras5 make python3-tk python3-dev gnupg python3-venv sqlite3 xvfb

  - &install_build_dependencies
    run:
      name: Install build dependencies
      command: |
        set -e
        apt update && apt install -y git make sudo

  - &run_tests
    run:
      name: Install requirements and run tests
      command: |
        set -e
        make venv
        source .venv/bin/activate
        export PYTHONPATH=$PYTHONPATH:.  # so alembic can get to Base metadata
        make check --keep-going

  - &run_lint
    run:
      name: Run lint, then static analysis on source code to find security issues
      command: |
        set -e
        source .venv/bin/activate
        make check-black check-isort lint bandit check-strings

  - &check_python_dependencies_for_vulnerabilities
    run:
      name: Check Python dependencies for known vulnerabilities
      command: |
        set -e
        source .venv/bin/activate
        make safety

  - &install_packaging_dependencies
    run:
      name: Install Debian packaging dependencies and download Python wheels
      command: |
        set -x
        mkdir ~/packaging && cd ~/packaging
        # local builds may not have an ssh url, so || true
        git config --global --unset url.ssh://git@github.com.insteadof || true
        git clone https://github.com/freedomofpress/securedrop-debian-packaging.git
        cd securedrop-debian-packaging
        apt-get update && apt-get install -y sudo make
        make install-deps
        PKG_DIR=~/project make requirements

  - &verify_requirements
    run:
      name: Ensure that build-requirements.txt and requirements.txt are in sync.
      command: |
        cd ~/project
        # Return 1 if unstaged changes exist (after `make requirements` in the
        # previous run step), else return 0.
        git diff --quiet

  - &build_debian_package
    run:
      name: Build debian package
      command: |
        cd ~/project
        ./update_version.sh 1000.0  # Dummy version number, doesn't matter what we put here
        cd ~/packaging/securedrop-debian-packaging
        export PKG_VERSION=1000.0
        export PKG_PATH=~/project/
        make securedrop-client

version: 2
jobs:
  build-bullseye:
    docker:
      - image: debian:bullseye
    steps:
      - *install_build_dependencies
      - checkout
      - *install_packaging_dependencies
      - *verify_requirements
      - *build_debian_package

  test-bullseye:
    docker:
      - image: debian:bullseye
    steps:
      - *install_testing_dependencies
      - checkout
      - *run_tests
      - store_test_results:
          path: test-results
      - *run_lint
      - *check_python_dependencies_for_vulnerabilities

workflows:
  version: 2
  securedrop_client_ci:
    jobs:
      - test-bullseye
      - build-bullseye

  nightly:
    triggers:
      - schedule:
          cron: "0 6 * * *"
          filters:
            branches:
              only:
                - main
    jobs:
      - test-bullseye
      - build-bullseye
